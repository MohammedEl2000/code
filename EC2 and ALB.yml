AWSTemplateFormatVersion: "2010-09-09"
Description: "Security groups"

Parameters:
  Environment:
    Description: Product name
    Type: String
    Default: FYP

Resources:
  #EC2 Instances
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: instance security group
      VpcId:
        Fn::ImportValue: 
          !Sub "${Environment}-VpcId"
      SecurityGroupEgress: 
        - CidrIp: "0.0.0.0/0"
          Description: "Allow all outbound traffic"
          FromPort: 0
          IpProtocol: -1
          ToPort: 0
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
        
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0

  EC2Instance1:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0aa7d40eeae50c9a9 
      InstanceType: t2.micro
      SecurityGroupIds:
        - !Ref EC2SecurityGroup
      SubnetId: 
        Fn::ImportValue:
          !Sub "${Environment}-PublicSubnet1Id"
      KeyName: key
      UserData:
        Fn::Base64:
          Fn::Sub:
            - |
              #!/bin/bash
              sudo yum update -y
              sudo amazon-linux-extras install php8.0 mariadb10.5 -y
              sudo yum install -y git httpd
              sudo systemctl start httpd
              sudo systemctl enable httpd
              sudo rm -rf /var/www/html/*
              echo ${endpoint} >> test.txt
              sudo su
              sudo echo "<?php
              define('DB_SERVER', '${endpoint}');
              define('DB_USERNAME', 'user');
              define('DB_PASSWORD', 'password');
              define('DB_DATABASE', 'dbmysql');
              ?>" >> /var/www/awsdbinfo.inc
              sudo git clone https://github.com/MohammedEl2000/CA2-IMD.git /var/www/html/
            - endpoint:
                Fn::ImportValue: 
                  !Sub "${Environment}-endpoint"

  EC2Instance2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0aa7d40eeae50c9a9
      InstanceType: t2.micro
      SecurityGroupIds:
        - !Ref EC2SecurityGroup
      SubnetId: 
        Fn::ImportValue:
          !Sub "${Environment}-PublicSubnet2Id"
      KeyName: key
      UserData:
        Fn::Base64:
          Fn::Sub:
            - |
              #!/bin/bash
              sudo yum update -y
              sudo amazon-linux-extras install php8.0 mariadb10.5 -y
              sudo yum install -y git httpd
              sudo systemctl start httpd
              sudo systemctl enable httpd
              sudo rm -rf /var/www/html/*
              echo ${endpoint} >> test.txt
              sudo su
              sudo echo "<?php
              define('DB_SERVER', '${endpoint}');
              define('DB_USERNAME', 'user');
              define('DB_PASSWORD', 'password');
              define('DB_DATABASE', 'dbmysql');
              ?>" >> /var/www/awsdbinfo.inc
              sudo git clone https://github.com/MohammedEl2000/CA2-IMD.git /var/www/html/
            - endpoint:
                Fn::ImportValue: 
                  !Sub "${Environment}-endpoint"

  #Application  Load Balancer
  ELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ELB Security Group
      VpcId:
        Fn::ImportValue: 
          !Sub "${Environment}-VpcId"
      SecurityGroupEgress: 
        - CidrIp: "0.0.0.0/0"
          Description: "Allow all outbound traffic"
          FromPort: 0
          IpProtocol: -1
          ToPort: 0
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0

  EC2TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 15
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: '200'
      Name: EC2TargetGroup
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '20'
      Targets:
      - Id: !Ref EC2Instance1
        Port: 80
      - Id: !Ref EC2Instance2
        Port: 80
      UnhealthyThresholdCount: 3
      VpcId:
        Fn::ImportValue: 
          !Sub "${Environment}-VpcId"

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref EC2TargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Subnets:
        - Fn::ImportValue: 
            !Sub "${Environment}-PublicSubnet1Id"
        - Fn::ImportValue: 
            !Sub "${Environment}-PublicSubnet2Id"
      SecurityGroups:
        - !GetAtt ELBSecurityGroup.GroupId